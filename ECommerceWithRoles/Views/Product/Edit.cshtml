@model ECommerceWithRoles.Models.ProductViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h2>Edit</h2>


    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Product.ProductId)

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Product.Description, new { cols = 35, @rows = 8 })
                    @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ImageFile" class="form-control" />
                    @Html.ValidationMessageFor(model => model.Product.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AllTagsSelectList, "Tags", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="button" value="Add Tags" onclick="addTagTextBox()" />
                    <div id="additional-tags">
                        <datalist id='tag-list'>
                            @foreach (var tag in Model.AllTagsString)
                            {<option value='@tag'></option>}
                        </datalist>
                    </div>
                    @Html.ListBoxFor(model => model.SelectedTags, Model.AllTagsSelectList, new { style = "height: 200px" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AllTagsSelectList, "Department", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedDepartment, Model.AllDepartments)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function addTagTextBox() {
            let additionalTags = document.getElementById("additional-tags");
            additionalTags.innerHTML +=
                "<input name='AdditionalTags' type='text' list='tag-list' class='valid' aria-invalid='false'> <br /> "
        }
    </script>
}
